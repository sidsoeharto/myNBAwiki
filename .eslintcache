[{"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\index.js":"1","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\App.js":"2","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\reportWebVitals.js":"3","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\index.js":"4","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\components\\Navbar.jsx":"5","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\index.js":"6","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\FavoritesPage.jsx":"7","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\DetailPage.jsx":"8","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\components\\PlayerCardFavorite.jsx":"9","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\actions.js":"10","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\components\\PlayerStats.jsx":"11","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\components\\PlayerDetailCard.jsx":"12","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\TeamPage.jsx":"13","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\AboutPage.jsx":"14","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\HomePage.jsx":"15","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\components\\PlayerCard.jsx":"16","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\hooks\\useFetchPlayers.js":"17","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\hooks\\useFetchTeams.js":"18","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\index.js":"19","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\playerReducer.js":"20","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\teamReducer.js":"21","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\favoriteReducer.js":"22","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\rosterReducer.js":"23","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\playerDataReducer.js":"24"},{"size":690,"mtime":1610013513685,"results":"25","hashOfConfig":"26"},{"size":1158,"mtime":1610013513676,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":215,"mtime":1610013513687,"results":"29","hashOfConfig":"26"},{"size":3629,"mtime":1610013513678,"results":"30","hashOfConfig":"26"},{"size":248,"mtime":1610013513801,"results":"31","hashOfConfig":"26"},{"size":893,"mtime":1610013513757,"results":"32","hashOfConfig":"26"},{"size":11078,"mtime":1610013513756,"results":"33","hashOfConfig":"26"},{"size":1978,"mtime":1610013513680,"results":"34","hashOfConfig":"26"},{"size":2893,"mtime":1610013513686,"results":"35","hashOfConfig":"26"},{"size":136,"mtime":1610013513682,"results":"36","hashOfConfig":"26"},{"size":213,"mtime":1610013513681,"results":"37","hashOfConfig":"26"},{"size":132,"mtime":1610013513799,"results":"38","hashOfConfig":"26"},{"size":131,"mtime":1610013513755,"results":"39","hashOfConfig":"26"},{"size":1567,"mtime":1610013513796,"results":"40","hashOfConfig":"26"},{"size":2042,"mtime":1610013513679,"results":"41","hashOfConfig":"26"},{"size":982,"mtime":1610013513683,"results":"42","hashOfConfig":"26"},{"size":966,"mtime":1610013513684,"results":"43","hashOfConfig":"26"},{"size":478,"mtime":1610013513689,"results":"44","hashOfConfig":"26"},{"size":420,"mtime":1610013513751,"results":"45","hashOfConfig":"26"},{"size":416,"mtime":1610013513753,"results":"46","hashOfConfig":"26"},{"size":443,"mtime":1610013513688,"results":"47","hashOfConfig":"26"},{"size":441,"mtime":1610013513752,"results":"48","hashOfConfig":"26"},{"size":565,"mtime":1610013513689,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wbtwin",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"55"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"55"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\index.js",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\App.js",["109"],"import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["110","111"],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\reportWebVitals.js",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\index.js",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\components\\Navbar.jsx",["112","113","114"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { fade, withStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, IconButton, Typography, Button, InputBase } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst styles = theme => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    marginRight: theme.spacing(3),\r\n  },\r\n  logo: {\r\n    height: '44px'\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  }\r\n})\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { classes } = this.props\r\n\r\n    return (\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\">\r\n            <img src=\"https://www.iconarchive.com/download/i103841/blackvariant/button-ui-requests-13/NBA.ico\" className={classes.logo}/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title} variant=\"h6\" noWrap>\r\n            myNBAWiki\r\n          </Typography>\r\n          <Button color=\"inherit\" className={classes.menuButton}>\r\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\r\n              All Players\r\n            </Link>\r\n          </Button>\r\n          <Button color=\"inherit\" className={classes.menuButton}>\r\n            <Link to=\"/roster\" style={{ textDecoration: 'none' }}>\r\n              Players by Team\r\n            </Link>\r\n          </Button>\r\n          <Button color=\"inherit\" className={classes.menuButton}>\r\n            <Link to=\"/favorites\" style={{ textDecoration: 'none' }}>\r\n              Favorite Players\r\n            </Link>\r\n          </Button>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase \r\n              placeholder=\"Search\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    )\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Navbar)","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\index.js",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\FavoritesPage.jsx",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\DetailPage.jsx",["115","116","117","118","119","120","121","122"],"import React from 'react';\r\nimport PlayerDetailCard from '../components/PlayerDetailCard';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchPlayerData } from '../store/actions'\r\n\r\nimport { Grid, Container, Paper, Divider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport PlayerStats from '../components/PlayerStats';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { Avatar, Card, CardMedia, CardHeader, CardContent } from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(0),\r\n      width: theme.spacing(24),\r\n      height: theme.spacing(24),\r\n    },\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(0),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    borderRadius: \"0%\",\r\n    border: 2,\r\n    borderColor: 'text.secondary'\r\n  },\r\n  paperContent: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  playerDetailCard: {\r\n    borderRadius: \"0%\",\r\n    border: 1,\r\n    borderColor: 'text.secondary'\r\n  }\r\n}));\r\n\r\nfunction DetailPage (props) {\r\n  const dispatch = useDispatch()\r\n  let { id } = useParams()\r\n  const classes = useStyles()\r\n  const playerDataUrl = `https://data.nba.net/data/10s/prod/v1/2020/players/${id}_profile.json`\r\n\r\n  React.useEffect(() => {\r\n    dispatch(fetchPlayerData(playerDataUrl))\r\n  }, [dispatch, playerDataUrl])\r\n\r\n  const player = useSelector(state => state.player.player)\r\n  const teams = useSelector(state => state.team.teams)\r\n  const team = useSelector(state => state.team.playerTeam)\r\n\r\n  const playerDataRegular = useSelector(state => state.playerData.playerDataRegular)\r\n  const playerDataLatest = useSelector(state => state.playerData.playerDataLatest)\r\n  const playerDataSummary = useSelector(state => state.playerData.playerDataSummary)\r\n\r\n  const today = moment()\r\n\r\n  // let dataLatest = playerData.latest\r\n  // let dataSummary = playerData.careerSummary\r\n  // let dataRegular = playerData.regularSeason\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={4}>\r\n          <Card className={classes.playerDetailCard}>\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h4\" component=\"h3\" align=\"center\">\r\n                {player.firstName + ' ' + player.lastName}\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textSecondary\" component=\"h6\" align=\"center\">\r\n                {team.fullName} | #{player.jersey} | {player.teamSitesOnly.posFull}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardMedia\r\n              image={`https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/${player.personId}.png`}\r\n              style={{height: 260}}\r\n            >\r\n            </CardMedia>\r\n          </Card>\r\n        </Grid>\r\n        <Grid container item xs={8}>\r\n          <Grid item xs={3} className={classes.root}>\r\n            <Card className={classes.paper}>\r\n              <CardContent>\r\n                <Typography variant='h6' align=\"center\" component=\"h3\">Height:</Typography>\r\n                <Divider />\r\n                <Typography variant='h5' component=\"h6\" className={classes.paperContent}>{player.heightFeet}' {player.heightInches}'' ({player.heightMeters}m)</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={3} className={classes.root}>\r\n            <Card className={classes.paper}>\r\n              <CardContent>\r\n                <Typography variant='h6' align=\"center\" component=\"h3\">Weight:</Typography>\r\n                <Divider />\r\n                <Typography variant='h5' align=\"center\" component=\"h6\">{player.weightPounds}lbs ({player.weightKilograms}kg)</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={3} className={classes.root}>\r\n            <Card className={classes.paper}>\r\n              <CardContent>\r\n                <Typography variant='h6' align=\"center\" component=\"h3\">Country:</Typography>\r\n                <Divider />\r\n                <Typography variant='h5' align=\"center\" component=\"h6\">{player.country}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={3} className={classes.root}>\r\n            <Card className={classes.paper}>\r\n              <CardContent>\r\n                <Typography variant='h6' align=\"center\" component=\"h3\">College:</Typography>\r\n                <Divider />\r\n                <Typography variant='h5' align=\"center\" component=\"h6\">{player.collegeName}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={3} className={classes.root}>\r\n            <Card className={classes.paper}>\r\n              <CardContent>\r\n                <Typography variant='h6' align=\"center\" component=\"h3\">Age:</Typography>\r\n                <Divider />\r\n                <Typography variant='h5' align=\"center\" component=\"h6\">{Number(today.format('YYYY')) - Number(player.dateOfBirthUTC.slice(0,4))} years</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={3} className={classes.root}>\r\n            <Card className={classes.paper}>\r\n              <CardContent>\r\n                <Typography variant='h6' align=\"center\" component=\"h3\">Birthdate:</Typography>\r\n                <Divider />\r\n                <Typography variant='h5' align=\"center\" component=\"h6\">{moment(player.dateOfBirthUTC).format('DD MMMM YYYY')}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={3} className={classes.root}>\r\n            <Card className={classes.paper}>\r\n              <CardContent>\r\n                <Typography variant='h6' align=\"center\" component=\"h3\">Draft:</Typography>\r\n                <Divider />\r\n                <Typography variant='h5' align=\"center\" component=\"h6\">{player.draft.pickNum === \"\" ? \"Undrafted\" : `${player.draft.seasonYear} R${player.draft.roundNum} Pick ${player.draft.pickNum}`}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={3} className={classes.root}>\r\n            <Card className={classes.paper}>\r\n              <CardContent>\r\n                <Typography variant='h6' align=\"center\" component=\"h3\">Experience:</Typography>\r\n                <Divider />\r\n                <Typography variant='h5' align=\"center\" component=\"h6\">{player.nbaDebutYear === \"2020\" ? \"Rookie\" : `${2020 - Number(player.nbaDebutYear)} years`}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n        <Container>\r\n          <img src={`https://www.nba.com/stats/media/img/teams/logos/${team.tricode}_logo.svg`}/>\r\n          <Typography variant='h3' align=\"center\" component=\"h2\">Career Summary:</Typography>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>TPP</TableCell>\r\n                  <TableCell>FTP</TableCell>\r\n                  <TableCell>FGP</TableCell>\r\n                  <TableCell>PPG</TableCell>\r\n                  <TableCell>RPG</TableCell>\r\n                  <TableCell>APG</TableCell>\r\n                  <TableCell>BPG</TableCell>\r\n                  <TableCell>MPG</TableCell>\r\n                  <TableCell>SPG</TableCell>\r\n                  <TableCell>ASSISTS</TableCell>\r\n                  <TableCell>BLOCKS</TableCell>\r\n                  <TableCell>STEALS</TableCell>\r\n                  <TableCell>TO</TableCell>\r\n                  <TableCell>OREB</TableCell>\r\n                  <TableCell>DREB</TableCell>\r\n                  <TableCell>REB</TableCell>\r\n                  <TableCell>FGM</TableCell>\r\n                  <TableCell>FGA</TableCell>\r\n                  <TableCell>3PM</TableCell>\r\n                  <TableCell>3PA</TableCell>\r\n                  <TableCell>FTM</TableCell>\r\n                  <TableCell>FTA</TableCell>\r\n                  <TableCell>PF</TableCell>\r\n                  <TableCell>PTS</TableCell>\r\n                  <TableCell>GP</TableCell>\r\n                  <TableCell>GS</TableCell>\r\n                  <TableCell>+/-</TableCell>\r\n                  <TableCell>MIN</TableCell>\r\n                  <TableCell>DD2</TableCell>\r\n                  <TableCell>TD3</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  {Object.values(playerDataSummary).map(el => <TableCell>{el}</TableCell>)}\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <Typography variant='h3' align=\"center\" component=\"h2\">Latest Stats:</Typography>\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>SEASON</TableCell>\r\n                  <TableCell>SEASON STAGE</TableCell>\r\n                  <TableCell>PPG</TableCell>\r\n                  <TableCell>RPG</TableCell>\r\n                  <TableCell>APG</TableCell>\r\n                  <TableCell>MPG</TableCell>\r\n                  <TableCell>TOPG</TableCell>\r\n                  <TableCell>SPG</TableCell>\r\n                  <TableCell>BPG</TableCell>\r\n                  <TableCell>TPP</TableCell>\r\n                  <TableCell>FTP</TableCell>\r\n                  <TableCell>FGP</TableCell>\r\n                  <TableCell>ASSISTS</TableCell>\r\n                  <TableCell>BLOCKS</TableCell>\r\n                  <TableCell>STEALS</TableCell>\r\n                  <TableCell>TO</TableCell>\r\n                  <TableCell>OREB</TableCell>\r\n                  <TableCell>DREB</TableCell>\r\n                  <TableCell>REB</TableCell>\r\n                  <TableCell>FGM</TableCell>\r\n                  <TableCell>FGA</TableCell>\r\n                  <TableCell>TPM</TableCell>\r\n                  <TableCell>TPA</TableCell>\r\n                  <TableCell>FTM</TableCell>\r\n                  <TableCell>FTA</TableCell>\r\n                  <TableCell>PF</TableCell>\r\n                  <TableCell>PTS</TableCell>\r\n                  <TableCell>GP</TableCell>\r\n                  <TableCell>GS</TableCell>\r\n                  <TableCell>+/-</TableCell>\r\n                  <TableCell>MIN</TableCell>\r\n                  <TableCell>DD2</TableCell>\r\n                  <TableCell>TD3</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  {Object.values(playerDataLatest).map(el => <TableCell>{el}</TableCell>)}\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Container>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailPage","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\components\\PlayerCardFavorite.jsx",["123"],"import React from 'react';\r\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPlayer, setPlayerTeam, removeFavorite } from '../store/actions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction PlayerCardFavorite (props) {\r\n  let history = useHistory()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  function handleClick (player, e) {\r\n    dispatch(setPlayer(player.personId))\r\n    dispatch(setPlayerTeam(player.teamId))\r\n    history.push({\r\n      pathname:`/player/${player.personId}`,\r\n    })\r\n  }\r\n\r\n  function clickToRemove (player) {\r\n    console.log('remove', player)\r\n    dispatch(removeFavorite(player))\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardMedia\r\n        image={`https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/${props.favorite.personId}.png`}\r\n        style={{height: 200}}\r\n      >\r\n      </CardMedia>\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {props.favorite.firstName + ' ' + props.favorite.lastName}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Position: {props.favorite.pos}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Jersey Number: {props.favorite.jersey}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Team: {props.team.fullName}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => clickToRemove(props.favorite)}>\r\n          Remove From Favorites\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={(e) => handleClick(props.favorite, e)}>\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PlayerCardFavorite\r\n","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\actions.js",["124"],"export function setPlayers (payload) {\r\n  return { type: \"SET_PLAYERS\", payload: payload }\r\n}\r\n\r\nexport function setPlayer (payload) {\r\n  return { type: \"SET_PLAYER\", payload: payload }\r\n}\r\n\r\nexport function setTeams (payload) {\r\n  return { type: \"SET_TEAMS\", payload: payload }\r\n}\r\n\r\nexport function setPlayerTeam (payload) {\r\n  return { type: \"SET_PLAYER_TEAM\", payload: payload }\r\n}\r\n\r\nexport function setRosterTeam (payload) {\r\n  return { type: \"SET_ROSTER_TEAM\", payload: payload}\r\n}\r\n\r\nexport function addFavorite (player) {\r\n  return { type: \"ADD_FAVORITE\", payload: player }\r\n}\r\n\r\nexport function removeFavorite (payload) {\r\n  return { type: \"REMOVE_FAVORITE\", payload: payload }\r\n}\r\n\r\nexport function setRoster (payload) {\r\n  return { type: \"SET_ROSTER\", payload: payload }\r\n}\r\n\r\nexport function setPlayerDataRegular (payload) {\r\n  return { type: \"SET_PLAYERDATA_REGULAR\", payload: payload }\r\n}\r\n\r\nexport function setPlayerDataLatest (payload) {\r\n  return { type: \"SET_PLAYERDATA_LATEST\", payload: payload }\r\n}\r\n\r\nexport function setPlayerDataSummary (payload) {\r\n  return { type: \"SET_PLAYERDATA_SUMMARY\", payload: payload }\r\n}\r\n\r\nexport const fetchRoster = () => (dispatch, getState) => {\r\n  const { rosterTeam } = getState()\r\n  const template = require('nba-client-template')\r\n  const options = {\r\n    headers: {\r\n      \"Accept-Encoding\": \"gzip, deflate\",\r\n      \"Accept-Language\": \"en-US\",\r\n      Accept: \"*/*\",\r\n      \"User-Agent\": template.user_agent,\r\n      Referer: template.referrer,\r\n      Connection: \"keep-alive\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      Origin: \"https://stats.nba.com\",\r\n    }\r\n  }\r\n  fetch(`https://data.nba.net/data/10s/prod/v1/2020/teams/${rosterTeam.urlName}/roster.json`)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log(data.league.standard.players)\r\n      dispatch(setRosterTeam(data.league.standard.players))\r\n    })\r\n    .catch(err => {\r\n      console.log('from action', err.message)\r\n    })\r\n}\r\n\r\nexport const fetchPlayerData = (url) => (dispatch, getState) => {\r\n  const template = require('nba-client-template')\r\n  const options = {\r\n    headers: {\r\n      \"Accept-Encoding\": \"gzip, deflate\",\r\n      \"Accept-Language\": \"en-US\",\r\n      Accept: \"*/*\",\r\n      \"User-Agent\": template.user_agent,\r\n      Referer: template.referrer,\r\n      Connection: \"keep-alive\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      Origin: \"https://stats.nba.com\",\r\n    }\r\n  }\r\n  fetch(url, options)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(data.league.standard.stats)\r\n      dispatch(setPlayerDataSummary(data.league.standard.stats.careerSummary))\r\n      dispatch(setPlayerDataRegular(data.league.standard.stats.regularSeason.season))\r\n      dispatch(setPlayerDataLatest(data.league.standard.stats.latest))\r\n    })\r\n    .catch((err) => {\r\n      console.log('from action', err.message)\r\n    })\r\n}","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\components\\PlayerStats.jsx",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\components\\PlayerDetailCard.jsx",["125","126"],"import React, { Component } from 'react';\r\nimport { Card } from '@material-ui/core';\r\n\r\nfunction PlayerDetailCard (props) {\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerDetailCard","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\TeamPage.jsx",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\AboutPage.jsx",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\views\\HomePage.jsx",["127","128","129","130","131"],"import React, { Component } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport PlayerCard from '../components/PlayerCard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction HomePage (props) {\r\n  const players = useSelector(state => state.player.players)\r\n  const teams = useSelector(state => state.team.teams)\r\n\r\n  const [currentPage, setCurrentPage] = React.useState(1)\r\n  const [playersPerPage, setPlayersPerPage] = React.useState(12)\r\n\r\n  const indexOfLastPlayer = currentPage * playersPerPage;\r\n  const indexOfFirstPlayer = indexOfLastPlayer - playersPerPage;\r\n  const currentPlayers = players.slice(indexOfFirstPlayer, indexOfLastPlayer)\r\n\r\n  const handleChange = (event, value) => {\r\n    setCurrentPage(Number(value))\r\n  }\r\n\r\n  function renderTeam (player, teams) {\r\n    let renderedTeam = {}\r\n    teams.forEach(team => {\r\n      if (player.teamId === team.teamId) {\r\n        renderedTeam = team\r\n      }\r\n    })\r\n    return renderedTeam\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container spacing={3}>\r\n        {currentPlayers.filter(player => player.isActive === true).map(player => <Grid item xs={3}><PlayerCard key={player.personId} player={player} team={renderTeam(player, teams)}/></Grid>)}\r\n      </Grid>\r\n      <Pagination count={42} page={currentPage} onChange={handleChange} />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\components\\PlayerCard.jsx",["132","133"],"import React, { Component } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setPlayer, setPlayerTeam } from '../store/actions';\r\nimport { addFavorite } from '../store/actions';\r\n\r\nfunction PlayerCard (props) {\r\n  let history = useHistory()\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  function handleClick (player, e) {\r\n    dispatch(setPlayer(player.personId))\r\n    dispatch(setPlayerTeam(player.teamId))\r\n    history.push({\r\n      pathname:`/player/${player.personId}`,\r\n    })\r\n  }\r\n\r\n  function clickToAdd (player) {\r\n    console.log(player)\r\n    dispatch(addFavorite(player))\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardActionArea>\r\n        <CardMedia \r\n          image={`https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190/${props.player.personId}.png`}\r\n          style={{height: 200}}\r\n        />\r\n      </CardActionArea>\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n          {props.player.firstName + ' ' + props.player.lastName}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Position: {props.player.pos}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Jersey Number: {props.player.jersey}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Team: {props.team.fullName}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => clickToAdd(props.player)}>\r\n          Favorite\r\n        </Button>\r\n        <Button size=\"small\" color=\"primary\" id={props.player.personId} onClick={(e) => handleClick(props.player, e)}>\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PlayerCard","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\hooks\\useFetchPlayers.js",["134","135"],"import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setPlayers } from '../store/actions.js'\r\n\r\nfunction useFetchPlayers(url) {\r\n  const players = useSelector(state => state.player.players)\r\n  const dispatch = useDispatch()\r\n\r\n  const template = require('nba-client-template')\r\n  const options = {\r\n    headers: {\r\n      \"Accept-Encoding\": \"gzip, deflate\",\r\n      \"Accept-Language\": \"en-US\",\r\n      Accept: \"*/*\",\r\n      \"User-Agent\": template.user_agent,\r\n      Referer: template.referrer,\r\n      Connection: \"keep-alive\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      Origin: \"https://stats.nba.com\",\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(url, options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch(setPlayers(data.league.standard))\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [url])\r\n\r\n  return [players]\r\n}\r\n\r\nexport default useFetchPlayers","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\hooks\\useFetchTeams.js",["136","137"],"import { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setTeams } from '../store/actions.js'\r\n\r\nfunction useFetchTeams(url) {\r\n  const teams = useSelector(state => state.team.teams)\r\n  const dispatch = useDispatch()\r\n\r\n  const template = require('nba-client-template')\r\n  const options = {\r\n    headers: {\r\n      \"Accept-Encoding\": \"gzip, deflate\",\r\n      \"Accept-Language\": \"en-US\",\r\n      Accept: \"*/*\",\r\n      \"User-Agent\": template.user_agent,\r\n      Referer: template.referrer,\r\n      Connection: \"keep-alive\",\r\n      \"Cache-Control\": \"no-cache\",\r\n      Origin: \"https://stats.nba.com\",\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(url, options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        dispatch(setTeams(data.league.standard))\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }, [url])\r\n\r\n  return [teams]\r\n}\r\n\r\nexport default useFetchTeams","C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\index.js",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\playerReducer.js",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\teamReducer.js",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\favoriteReducer.js",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\rosterReducer.js",[],"C:\\Users\\msidi\\belajar\\phase3\\react-challenge\\src\\store\\reducers\\playerDataReducer.js",[],{"ruleId":"138","severity":1,"message":"139","line":2,"column":35,"nodeType":"140","messageId":"141","endLine":2,"endColumn":43},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"138","severity":1,"message":"146","line":6,"column":8,"nodeType":"140","messageId":"141","endLine":6,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":85,"column":13,"nodeType":"149","endLine":85,"endColumn":138},{"ruleId":"150","severity":1,"message":"151","line":87,"column":62,"nodeType":"152","endLine":87,"endColumn":74},{"ruleId":"138","severity":1,"message":"153","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":24},{"ruleId":"138","severity":1,"message":"154","line":7,"column":27,"nodeType":"140","messageId":"141","endLine":7,"endColumn":32},{"ruleId":"138","severity":1,"message":"155","line":9,"column":8,"nodeType":"140","messageId":"141","endLine":9,"endColumn":19},{"ruleId":"138","severity":1,"message":"156","line":11,"column":10,"nodeType":"140","messageId":"141","endLine":11,"endColumn":16},{"ruleId":"138","severity":1,"message":"157","line":11,"column":35,"nodeType":"140","messageId":"141","endLine":11,"endColumn":45},{"ruleId":"138","severity":1,"message":"158","line":55,"column":9,"nodeType":"140","messageId":"141","endLine":55,"endColumn":14},{"ruleId":"138","severity":1,"message":"159","line":58,"column":9,"nodeType":"140","messageId":"141","endLine":58,"endColumn":26},{"ruleId":"147","severity":1,"message":"148","line":163,"column":11,"nodeType":"149","endLine":163,"endColumn":98},{"ruleId":"138","severity":1,"message":"160","line":2,"column":16,"nodeType":"140","messageId":"141","endLine":2,"endColumn":30},{"ruleId":"138","severity":1,"message":"161","line":48,"column":9,"nodeType":"140","messageId":"141","endLine":48,"endColumn":16},{"ruleId":"138","severity":1,"message":"162","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"163","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"138","severity":1,"message":"162","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"164","line":2,"column":8,"nodeType":"140","messageId":"141","endLine":2,"endColumn":19},{"ruleId":"138","severity":1,"message":"165","line":3,"column":8,"nodeType":"140","messageId":"141","endLine":3,"endColumn":18},{"ruleId":"138","severity":1,"message":"166","line":7,"column":23,"nodeType":"140","messageId":"141","endLine":7,"endColumn":34},{"ruleId":"138","severity":1,"message":"167","line":14,"column":26,"nodeType":"140","messageId":"141","endLine":14,"endColumn":43},{"ruleId":"138","severity":1,"message":"162","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"168","line":4,"column":10,"nodeType":"140","messageId":"141","endLine":4,"endColumn":21},{"ruleId":"138","severity":1,"message":"169","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":32,"column":6,"nodeType":"172","endLine":32,"endColumn":11,"suggestions":"173"},{"ruleId":"138","severity":1,"message":"169","line":1,"column":10,"nodeType":"140","messageId":"141","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":32,"column":6,"nodeType":"172","endLine":32,"endColumn":11,"suggestions":"174"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["175"],"no-negated-in-lhs",["176"],"'MenuIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'PlayerDetailCard' is defined but never used.","'Paper' is defined but never used.","'PlayerStats' is defined but never used.","'Avatar' is defined but never used.","'CardHeader' is defined but never used.","'teams' is assigned a value but never used.","'playerDataRegular' is assigned a value but never used.","'CardActionArea' is defined but never used.","'options' is assigned a value but never used.","'Component' is defined but never used.","'Card' is defined but never used.","'CssBaseline' is defined but never used.","'Typography' is defined but never used.","'useDispatch' is defined but never used.","'setPlayersPerPage' is assigned a value but never used.","'useSelector' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'options'. Either include them or remove the dependency array.","ArrayExpression",["177"],["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"179","fix":"181"},"Update the dependencies array to be: [dispatch, options, url]",{"range":"182","text":"183"},{"range":"184","text":"183"},[917,922],"[dispatch, options, url]",[905,910]]